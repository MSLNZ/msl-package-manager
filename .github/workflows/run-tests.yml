name: Tests

on: [push, pull_request]

env:
  PY_COLOR: 1
  COLUMNS: 120

jobs:

  cache:
    name: Create PyPI and GitHub caches
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install MSL-Package-Manager
        run: python -m pip install .
      - name: Update PyPI and GitHub caches
        env:
          MSL_PM_GITHUB_AUTH: ${{ secrets.MSL_PM_GITHUB_AUTH }}
        run: |
          msl list --pypi --update-cache
          msl list --github --update-cache
      - name: Upload cached artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pypi-github-caches
          path: ~/.msl/package-manager/*.json
          if-no-files-found: error

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: cache

    strategy:
      fail-fast: false
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10', '3.11']
        os: [windows-latest, ubuntu-20.04, macos-latest]
        architecture: [x64]
        include:
          - python-version: '3.x'
            os: windows
            architecture: x86

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies and package
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          python -m pip install --upgrade --editable .[tests]
      - name: Download PyPI and GitHub caches (non Windows)
        uses: actions/download-artifact@v3
        if: ${{ matrix.os != 'windows-latest' }}
        with:
          name: pypi-github-caches
          path: ~/.msl/package-manager
      - name: Download PyPI and GitHub caches (Windows)
        uses: actions/download-artifact@v3
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: pypi-github-caches
          path: C:\\Users\\runneradmin\\.msl\\package-manager
      - name: Run tests
        run: python -m pytest
